<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.jfinalD</groupId>
  <artifactId>jfinalD</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>jfinalD Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <properties>
  	<org.apache.shiro.version>1.2.4</org.apache.shiro.version>
  	<jdk.version>1.7</jdk.version>
  	<jetty.version>9.2.13.v20150730</jetty.version>
  	
  </properties>
   <repositories>
        <repository>
            <id>maven-repo2</id>
            <name>maven-repo2</name>
            <layout>default</layout>
             <url>http://repo2.maven.org/maven2/</url>  
        </repository>
        <repository>
            <id>oschina Releases</id>
            <name>oschina Releases</name>
            <url>http://maven.oschina.net/content/groups/public</url>
        </repository>
    </repositories>
    
    <pluginRepositories>
        <pluginRepository>
            <id>maven2-repo</id>
            <name>maven2 Repository</name>
            <url>http://repo2.maven.org/maven2/</url>
        </pluginRepository>
        <pluginRepository>
            <id>oschina Releases</id>
            <name>oschina Releases</name>
            <url>http://maven.oschina.net/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>  
  
  <dependencies>
	<dependency>
		<groupId>com.jfinal</groupId>
		<artifactId>jfinal</artifactId>
		<version>2.0</version>
	</dependency>
	  <dependency>
		<groupId>com.alibaba</groupId>
		<artifactId>druid</artifactId>
		<version>1.0.15</version>
	</dependency>
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.35</version>
	</dependency>
	<!-- shiro -->
		<dependency>
           <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${org.apache.shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>${org.apache.shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${org.apache.shiro.version}</version>
        </dependency>
		<!-- freemarker -->
		<dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.23</version>
        </dependency>
        <!-- 加密解密相关
        <dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bctsp-jdk16</artifactId>
			<version>1.46</version>
			<type>pom.sig</type>
		</dependency> -->
		<!-- common工具类 -->
		 <dependency><!-- shiro -->
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		
     	<!-- jetty相关 -->
        <dependency>
            <groupId>com.jfinal</groupId>
            <artifactId>jetty-server</artifactId>
            <version>8.1.8</version>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- redis插件的依赖 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.6.2</version>
		</dependency>
		<!-- redis需要的序列化工具 -->
		<dependency>
			<groupId>de.ruedigermoeller</groupId>
			<artifactId>fst</artifactId>
			<version>2.16</version>
		</dependency>
		<!-- jsoup 解析html的 -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.8.3</version>
		</dependency>
			

  </dependencies>
  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
    	<!-- Compiler 插件, 设定JDK版本 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.5.1</version>
			<configuration>
				<source>${jdk.version}</source>
				<target>${jdk.version}</target>
				<showWarnings>true</showWarnings>
				<encoding>UTF-8</encoding>  
			</configuration>
		</plugin>
		<!-- war打包插件,排除某些文件  绕了很多弯路,记录要点如下:
			简单一句话说明:
			warSourceExcludes是在编译周期进行完成后从src/main/webapp目录复制文件时忽略，
			而packagingExcludes是在复制webapp目录完成后打包时忽略target/ibaby文件夹的文件
		-->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.4</version>
			<configuration>
				<warName>${project.artifactId}</warName>
				<packagingExcludes>WEB-INF/classes/portable/**,WEB-INF/classes/_*.*</packagingExcludes>
			</configuration>
		</plugin>
          <!-- 
	      	有时候，比如mybatis的mapper.xml文件
	      	我们习惯把它和Mapper.java放一起，都在src/main/java下面
	      	这样利用maven打包时，就需要修改pom.xml文件
	      	来把mapper.xml文件一起打包进jar或者war里了
	      	否则，这些文件不会被打包的。（maven认为src/main/java只是java的源代码路径） 
      	-->
		 <plugin>  
		      <artifactId>maven-resources-plugin</artifactId>  
		      <version>2.5</version>  
		      <executions>  
		          <execution>  
		              <id>copy-xmls</id>  
		              <phase>process-sources</phase>  
		              <goals>  
		                  <goal>copy-resources</goal>  
		              </goals>  
		              <configuration>  
		                  <outputDirectory>${basedir}/target/classes</outputDirectory>  
		                  <resources>  
		                      <resource>  
		                          <directory>${basedir}/src/main/java</directory>  
		                          <includes>  
		                              <include>**/*.xml</include>  
		                          </includes>  
		                      </resource>  
		                  </resources>  
		              </configuration>  
		          </execution>  
		      </executions>  
        	</plugin>  
    </plugins>
    
  </build>
</project>
