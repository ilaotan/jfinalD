<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ilaotan</groupId>
  <artifactId>jfinalD</artifactId>
  <packaging>war</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <url>http://maven.apache.org</url>
  <properties>
	  <jdk.version>1.7</jdk.version>
	  <jfinal.version>3.1</jfinal.version>
	  <jfinal.weixin.version>1.8</jfinal.weixin.version>
	  <!--<shiro.version>1.2.6</shiro.version>-->
	  <shiro.version>1.3.2</shiro.version>
	  <druid.version>1.0.29</druid.version>
	  <mysql.connector.version>5.1.39</mysql.connector.version>
	  <jedis.version>2.8.2</jedis.version>
	  <jsoup.version>1.8.3</jsoup.version>
	  <jackson.version>2.8.7</jackson.version>
	  <fastjson.version>1.2.29</fastjson.version>
	  <beetl.version>2.7.13</beetl.version>
  </properties>
  
  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
    	<!-- Compiler 插件, 设定JDK版本 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.3</version>
			<configuration>
				<source>${jdk.version}</source>
				<target>${jdk.version}</target>
				<showWarnings>true</showWarnings>
				<encoding>UTF-8</encoding>
			</configuration>
		</plugin>
		<!-- war打包插件,排除某些文件  绕了很多弯路,记录要点如下:
			简单一句话说明:
			warSourceExcludes是在编译周期进行完成后从src/main/webapp目录复制文件时忽略，
			而packagingExcludes是在复制webapp目录完成后打包时忽略target/ibaby文件夹的文件
		-->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.6</version>
			<configuration>
				<warName>${project.artifactId}</warName>
				<packagingExcludes>WEB-INF/classes/portable/**,WEB-INF/classes/_*.*</packagingExcludes>
			</configuration>
		</plugin>
    </plugins>

  </build>
	<dependencies>
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal</artifactId>
			<version>${jfinal.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal-weixin</artifactId>
			<version>${jfinal.weixin.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>freemarker</artifactId>
					<groupId>org.freemarker</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>
		<!-- shiro -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.crazycake</groupId>
			<artifactId>shiro-redis</artifactId>
			<version>2.4.2.1-RELEASE</version>
		</dependency>

		<!-- freemarker
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>${freemarker.version}</version>
		</dependency>-->
		<!--使用beetl模板引擎-->
		<dependency>
			<groupId>com.ibeetl</groupId>
			<artifactId>beetl</artifactId>
			<version>${beetl.version}</version>
		</dependency>

		<!-- 加密解密相关
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bctsp-jdk16</artifactId>
            <version>1.46</version>
            <type>pom.sig</type>
        </dependency> -->
		<!-- common工具类 -->
		<dependency><!-- shiro -->
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>commons-lang</groupId>-->
			<!--<artifactId>commons-lang</artifactId>-->
			<!--<version>2.4</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>

		<!-- jetty相关 -->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jetty-server</artifactId>
			<version>8.1.8</version>
			<!-- 若使用tomcat 需要将下面这行注释掉的放开 -->
			<!--<scope>provided</scope>-->
		</dependency>
		<!-- jetty-server里已经打包好servlet-api等包了 这一个jar功能上是完整的，即：支持servlet与jsp的web server
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		-->
		<!-- redis插件的依赖 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
		</dependency>
		<!-- redis需要的序列化工具-->
		<dependency>
			<groupId>de.ruedigermoeller</groupId>
			<artifactId>fst</artifactId>
			<version>2.16</version>
		</dependency>
		<!-- jsoup 解析html的 -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
		<!-- log4j

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>-->
		<!-- log4j的依赖 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.2</version>
		</dependency>
		<!-- object与json 互转的实现
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.zxing/core -->
		<!-- 二维码生成 -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.3.0</version>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>jdk-1.7</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<jdk>1.7</jdk>
			</activation>
			<properties>
				<maven.compiler.source>1.7</maven.compiler.source>
				<maven.compiler.target>1.7</maven.compiler.target>
				<maven.compiler.compilerVersion>1.7</maven.compiler.compilerVersion>
			</properties>
		</profile>
	</profiles>

</project>
